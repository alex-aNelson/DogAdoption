@page "/payments/create"
@using Microsoft.EntityFrameworkCore
@using DogAdoption.Models
@inject IDbContextFactory<DogAdoption.Data.DogAdoptionContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Payment</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Payment" OnValidSubmit="AddPayment" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="cardtype" class="form-label">CardType:</label> 
                <InputText id="cardtype" @bind-Value="Payment.CardType" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Payment.CardType" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="cardnumber" class="form-label">CardNumber:</label> 
                <InputText id="cardnumber" @bind-Value="Payment.CardNumber" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Payment.CardNumber" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="cardholdername" class="form-label">CardHolderName:</label> 
                <InputText id="cardholdername" @bind-Value="Payment.CardHolderName" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Payment.CardHolderName" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="expirationdate" class="form-label">ExpirationDate:</label> 
                <InputDate id="expirationdate" @bind-Value="Payment.ExpirationDate" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Payment.ExpirationDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="securitycode" class="form-label">SecurityCode:</label> 
                <InputText id="securitycode" @bind-Value="Payment.SecurityCode" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Payment.SecurityCode" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/payments">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Payment Payment { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddPayment()
    {
        using var context = DbFactory.CreateDbContext();
        context.Payment.Add(Payment);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/payments");
    }
}
