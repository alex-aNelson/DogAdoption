@page "/messages/create"
@using Microsoft.EntityFrameworkCore
@using DogAdoption.Models
@inject IDbContextFactory<DogAdoption.Data.DogAdoptionContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<style>
    .row{
        display: flex;
        flex-direction: column;
        margin-left: auto;
        margin-right: auto;
        margin-top: 50px;
        margin-bottom: 50px;
        background-color: #009879;
        border: none;
        border-radius: 15px;
        color: white;
        width: 700px;
        padding: 50px;
    }

    .col-md-4{
        width: 500px;
        margin-right: auto;
        margin-left: auto;
        display: flex;
        flex-direction: column;
    }

    .mb-3{
        width: 400px;
        margin-right: auto;
        margin-left: auto;
    }

    .page-header{
        display: flex;
        justify-content: center;
        flex-direction: column;
        align-items: center;
        text-align: center;
        margin-left: auto;
        margin-right: auto;
        color: black;
    }

    .btn-primary {
        border: none;
        border-radius: 20px;
        background-color: #4c4c4c;
        color: white;
        font-weight: bold;
        padding: 20px;
        width: 150px;
        height: 70px;
        transition: 150ms;
        margin-left: auto;
        margin-right: auto;
        margin-top: 50px;
    }
    .btn-primary:hover {
        transform: scale(1.4);
        background-color: gray;
    }

</style>

<div class="page-header">
    <h1>Send Message</h1>
    <h2>We want to hear from you!</h2>
</div>

<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Messages" OnValidSubmit="AddMessages" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="username" class="form-label">Username:</label> 
                <InputText id="username" @bind-Value="Messages.Username" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Messages.Username" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="header" class="form-label">Header:</label> 
                <InputText id="header" @bind-Value="Messages.Header" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Messages.Header" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="contents" class="form-label">Contents:</label> 
                <InputText id="contents" @bind-Value="Messages.Contents" class="form-control" aria-required="true"/> 
                <ValidationMessage For="() => Messages.Contents" class="text-danger" /> 
            </div>
            
            <button type="submit" class="btn btn-primary">Send</button>

        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private Messages Messages { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddMessages()
    {
        using var context = DbFactory.CreateDbContext();
        context.Messages.Add(Messages);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("");
    }

}
