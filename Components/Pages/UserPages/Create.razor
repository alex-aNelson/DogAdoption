@page "/users/create"
@using Microsoft.EntityFrameworkCore
@using DogAdoption.Models
@inject IDbContextFactory<DogAdoption.Data.DogAdoptionContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create User</PageTitle>

<div class="container mt-5">
    <!-- Header -->
    <div class="row">
        <div class="col-12">
            <h1 class="text-center mb-4">Create User</h1>
        </div>
    </div>

    <!-- User Form -->
    <div class="row justify-content-center">
        <div class="col-md-6">
            <EditForm method="post" Model="User" OnValidSubmit="AddUser" FormName="create" class="bg-light p-4 rounded">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" role="alert" />

                <div class="mb-3">
                    <label for="username" class="form-label">Username:</label>
                    <InputText id="username" @bind-Value="User.Username" class="form-control" aria-required="true" />
                    <ValidationMessage For="() => User.Username" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="password" class="form-label">Password:</label>
                    <InputText id="password" @bind-Value="User.Password" class="form-control" aria-required="true" />
                    <ValidationMessage For="() => User.Password" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="isadmin" class="form-label">Is Admin:</label>
                    <InputCheckbox id="isadmin" @bind-Value="User.IsAdmin" class="form-check-input" />
                    <ValidationMessage For="() => User.IsAdmin" class="text-danger" />
                </div>

                <div class="mb-3">
                    <label for="dateofbirth" class="form-label">Date of Birth:</label>
                    <InputDate id="dateofbirth" @bind-Value="User.DateOfBirth" class="form-control" aria-required="true" />
                    <ValidationMessage For="() => User.DateOfBirth" class="text-danger" />
                </div>

                <button type="submit" class="btn btn-primary">Create</button>
            </EditForm>
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-12 text-center">
            <a class="btn btn-secondary" href="/users">Back to List</a>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private User User { get; set; } = new();

    private async Task AddUser()
    {
        using var context = DbFactory.CreateDbContext();
        context.User.Add(User);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/users");
    }
}
